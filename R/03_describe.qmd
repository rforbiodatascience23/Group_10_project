---
title: "Describe data"
format: html
editor: visual
  markdown: 
    wrap: 72
---

```{r}
library(tidyverse)
library(dplyr)
library(ggplot2)
```

Dataset: Breast Cancer Wisconsin (Diagnostic) Data Set. The dataset is made to predict whether breast cancer in patients are benign or malignant. The attributes are computed from a digitized image of a fine needle aspirate of a breast mass. They describe characteristics of the cell nuclei present in the image. There are 31 different attributes from these images based on 569 patients. The class distribution is 357 benign and 212 malignant cases. There are no NA's. Each patient case is distinguished with an ID number and a diagnostic attribute: B for benign and M for malignant. For each cell nucleus there are 10 features computed:\
- Radius\
- Standard deviation of the gray-scaled values (texture)\
- Perimeter - Area - Local variation in radius lengths (smoothness)\
- Local variation in radius lengths (compactness)\
- Concave portions of the contour (concavity)\
- Number of concave portions in contour (concave points)\
- Symmetry - Fractal dimension\
For these each of these attributes 3 numbers were calculated: mean, standard error and the worst (mean of the 3 largest values). These 3 categories of datapoints are assembled to one big dataset as seen below.

```{r}
# Christina path_ikke binary: /home/people/s223094/project/Group_project_10/R/02_dat_clean.tsv
# matilde path: "/net/pupil1/home/people/s195796/projects/Group_10_project/R/02_dat_clean.tsv"
#cancer_dataset <- read_tsv("/home/people/s223094/project/Group_project_10/R/02_dat_clean.tsv")
#cancer_dataset <- read_tsv("/net/pupil1/home/people/s195796/projects/Group_10_project/R/02_dat_clean.tsv")
cancer_dataset_clean <- read_tsv("/home/people/s223094/project/Group_project_10/R/02_dat_clean.tsv")

cancer_dataset_clean_binary <- read_tsv("/home/people/s223094/project/Group_project_10/R/02_dat_clean.tsv")
```

## Heatmap of correlation between parameters

```{r}
# Specify the folder path and filename for the saved plot
folder_path2 <- "/net/pupil1/home/people/s194681/projects/Group_10_project_2/results"
```

```{r}
file_name <- "Heatmap.png"

correlation_matrix <- cancer_dataset_clean |> 
  select(!id) |>
  select_if(is.numeric) |> 
  cor()

myrownames <- rownames(correlation_matrix)

tidy_correlation <- correlation_matrix |>
  as_tibble() |> 
  mutate(myrownames) |>
  pivot_longer(cols = contains(c('mean', 'worst', 'se')),
               names_to = "variables",
               values_to = "correlation")

ggplot_heatmap <- ggplot(data = tidy_correlation,
                         mapping = aes(x = variables,
                                       y = myrownames,
                                       fill = correlation)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "blue", 
                       mid = "white", 
                       high = "red", 
                       midpoint = 0, 
                       limits = c(-1, 1)) +
  theme_minimal() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = "Correlation between variables",
       x = "variables",
       y = "variables") +
  theme(plot.title = element_text(hjust = 0.5))

print(ggplot_heatmap)

# Save the ggplot as a PNG file in the specified folder
ggsave(file.path(folder_path2, file_name), ggplot_heatmap, width = 8, height = 6, dpi = 300)
```

## Boxplot over data

### path for saved png

```{r}
# Specify the folder path and filename for the saved plot
folder_path <- "/home/people/s223094/project/Group_project_10/results"

```

Loading in function

```{r}
source('../R/99_proj_func.R')
```

Making boxplot

```{r}
# Name of specific figure
file_name <- "boxplot_mean.png"

# set seed
set.seed(1234)


# Gather the mean values
pivot_longer_mean <- pivot_standardized('mean', cancer_dataset_clean)


# Customize boxplot
gg <- ggplot(data = pivot_longer_mean, 
       aes(x = Parameter, y = StandardizedValue, fill = factor(diagnosis))) +
  
  geom_boxplot(alpha = 0.8, 
               color = "black", 
               size = 0.2) +
  
    scale_fill_manual(values = c("M" = "#Ff1000", "B" = "#0012B2"),
                    labels = c("malignant", "benign")) + 
  
  labs(y = "Standardized Value", 
       title = "Boxplot of parameters (mean)",
       fill = "diagnosis") +
  
  theme_minimal() +
  theme(
    plot.margin = margin(2, 1, 1, 1, "cm"),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

# Save the ggplot as a PNG file in the specified folder
ggsave(file.path(folder_path, file_name), gg, width = 8, height = 6, dpi = 300)

```

```{r}
# Name of specific figure
file_name <- "boxplot_se.png"

# set seed
set.seed(1234)

# Gather the mean values
pivot_longer_se <- pivot_standardized('se', cancer_dataset_clean)


# Customize boxplot
gg <- ggplot(data = pivot_longer_se, 
       aes(x = Parameter, y = StandardizedValue, fill = factor(diagnosis))) +
  
  geom_boxplot(alpha = 0.8, 
               color = "black", 
               size = 0.2) +
  
  scale_fill_manual(values = c("M" = "#Ff1000", "B" = "#0012B2"),
                    labels = c("malignant", "benign")) + 
  
  labs(y = "Standardized Value", 
       title = "Boxplot of parameters (mean)",
       fill = "diagnosis") +
  
  labs(x = "Parameter", y = "Standardized Value", title = "Boxplot of parameters (se)") +
  theme_minimal() +
  theme(
    plot.margin = margin(2, 1, 1, 1, "cm"),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

# Save the ggplot as a PNG file in the specified folder
ggsave(file.path(folder_path, file_name), gg, width = 8, height = 6, dpi = 300)


```

```{r}
# Name of specific figure
file_name <- "boxplot_worst.png"

# set seed
set.seed(1234)

# Gather the mean values
pivot_longer_worst <- pivot_standardized('worst', cancer_dataset_clean)


# Customize boxplot
gg <- ggplot(data = pivot_longer_worst, 
       aes(x = Parameter, y = StandardizedValue, fill = factor(diagnosis))) +
  
  geom_boxplot(alpha = 0.8, 
               color = "black", 
               size = 0.2) +
  
  scale_fill_manual(values = c("M" = "#Ff1000", "B" = "#0012B2"),
                    labels = c("malignant", "benign")) + 
  
  labs(y = "Standardized Value", 
       title = "Boxplot of parameters (mean)",
       fill = "diagnosis") +
  
  labs(x = "Parameter", y = "Standardized Value", title = "Boxplot of parameters (worst)") +
  theme_minimal() +
  theme(
    plot.margin = margin(2, 1, 1, 1, "cm"),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

# Save the ggplot as a PNG file in the specified folder
ggsave(file.path(folder_path, file_name), gg, width = 8, height = 6, dpi = 300)



```
