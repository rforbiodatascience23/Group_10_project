---
title: "RandomForestClassifier"
format: html
editor: visual
---

```{r}
library(tidymodels)
library(tidyverse)
```

## Data Preparation

```{r}
cancer_data_clean <- read_tsv(paste0(data_folder,'02_dat_clean.tsv'))
cancer_data_clean <- cancer_data_clean |>
  rename_with(~ gsub(" ", "_", .), everything()) |>
  mutate(diagnosis = as.factor(diagnosis))
```

## Random Forest Classifier

```{r}
set.seed(123)

# Set up 5-fold cross-validation
cv_folds <- vfold_cv(cancer_data_clean, v = 5, strata = diagnosis)

# Define the random forest model
rf_spec <- rand_forest() |> 
  set_engine("randomForest") |> 
  set_mode("classification")

# Define the workflow
rf_workflow <- workflow() |> 
  add_model(rf_spec) |> 
  add_formula(diagnosis ~ .)

# Fit the random forest models
fit_res <- fit_resamples(
  rf_workflow,
  cv_folds,
  metrics = metric_set(roc_auc, accuracy),
  control = control_resamples(save_pred = TRUE)
)

pred_res <- collect_predictions(fit_res)
roc <- pred_res |>
  group_by(id) |>
  roc_curve(truth = diagnosis, .pred_B) |> 
  ungroup()
average_auc <- pred_res |>
  group_by(id) |>
  roc_auc(truth = diagnosis, .pred_B) |>
  summarise(avg_auc = mean(.estimate))
```

## Visualize the performance

```{r}
roc_plot <- ggplot(roc, aes(x = 1 - specificity, y = sensitivity, color = as.factor(id))) +
  geom_line() +
  geom_abline(linetype = "dashed", color = "gray") +
  scale_color_brewer(palette="Paired", name = "Fold") +
  labs(title = "ROC Curves for Random Forest Classifier",
       x = "False Positive Rate",
       y = "True Positive Rate") +
  theme_minimal() +
  theme(
    text = element_text(size = 12),
    plot.title = element_text(size = 14, face = "bold"),  
    axis.title = element_text(size = 13), 
    axis.text = element_text(size = 12),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 11)
  )

print(average_auc)
ggsave('~/Desktop/Group_10_project/results/roc_curve.png')
```
